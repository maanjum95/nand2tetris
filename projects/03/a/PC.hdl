// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
	Not(in=load, out=notload);
	
	// The logic for the mux is as follows
	// 0 | 0 | Nothing   | a
	// 0 | 1 | Increment | b
	// 1 | 0 | Load      | c
	// 1 | 1 | Reset     | d
	Or(a=reset, b=load, out=toload);
	
	And(a=notload, b=inc, out=w1);
	Or(a=reset, b=w1, out=toinc);
	
	Or(a=toload, b=toinc, out=enableload);
	
	Inc16(in=regout, out=regoutincr);
	
	Mux4Way16(a=regout, b=regoutincr, c=in, d=false, sel[1]=toload, sel[0]=toinc, out=muxout);
	
	Register(in=muxout, load=enableload, out=out, out=regout);
}
